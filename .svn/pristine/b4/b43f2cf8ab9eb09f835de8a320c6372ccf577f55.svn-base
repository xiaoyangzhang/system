<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yhyt.health.dao.DictServiceCardMapper">
  <resultMap id="BaseResultMap" type="com.yhyt.health.model.DictServiceCard">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="income_rate" jdbcType="INTEGER" property="incomeRate" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, price, count, income_rate, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dict_service_card
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from dict_service_card
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yhyt.health.model.DictServiceCard">
    insert into dict_service_card (id, name, price, 
      count, income_rate, create_time
      )
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, 
      #{count,jdbcType=INTEGER}, #{incomeRate,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.yhyt.health.model.DictServiceCard">
    insert into dict_service_card
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="incomeRate != null">
        income_rate,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="incomeRate != null">
        #{incomeRate,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yhyt.health.model.DictServiceCard">
    update dict_service_card
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="incomeRate != null">
        income_rate = #{incomeRate,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yhyt.health.model.DictServiceCard">
    update dict_service_card
    set name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      count = #{count,jdbcType=INTEGER},
      income_rate = #{incomeRate,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="findDictServiceCardList" parameterType="java.util.Map" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List" /> from dict_service_card t 
  	<include refid="search_serviceCard"></include> 
  </select>

    <!-- 账户列表搜索条件  -->
  <sql id="search_serviceCard">
    <trim prefix="WHERE" prefixOverrides="AND|OR">
    	<if test="price!=null">and t.price =  #{price,jdbcType=INTEGER}</if>
    	<if test="count!=null"> and t.count = #{count,jdbcType=INTEGER}</if> 
      	<if test="name!=null">and t.name like concat(#{name,jdbcType=VARCHAR},'%')</if> 
    </trim>
  </sql>
</mapper>